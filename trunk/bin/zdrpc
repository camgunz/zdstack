#!/usr/bin/env python

import sys
import getopt
import pprint

from ZDStack import NO_AUTH_REQUIRED, set_configfile, get_configparser, \
                    get_server_proxy
from ZDStack.Utils import send_proxy_method

def print_usage(msg=None):
    if msg:
        print >> sys.stderr, "\nError: %s" % (msg)
    print >> sys.stderr, """\nzdrpc\n
Usage:
    zdrpc -m [ rpc_method_name ] -a [ args ] -c [ config_file ]

    args are separated by commas, for example:

        zdrpc -m get_config -a "Great CTF"
        zdrpc -m addban -a "Great CTF,12.226.97.20,rofl"
"""
    sys.exit(-1)

def handle_response(response):
    if isinstance(response, str):
        print response
    elif isinstance(response, list):
        print '\n'.join([str(x) for x in response])
    else:
        pprint.pprint(response) # actually prints

try:
    opts, args = getopt.gnu_getopt(sys.argv[1:], 'm:a:c:', [])
except getopt.GetoptError, ge:
    print_usage(ge)
if len(opts) not in (1, 2, 3):
    print_usage("Invalid number of arguments")
opts = dict(opts)
if '-c' in opts:
    set_configfile(opts['-c'])
cp = get_configparser()
proxy = get_server_proxy()

if opts['-m'] not in NO_AUTH_REQUIRED:
    username = cp.get('DEFAULT', 'zdstack_username')
    password = cp.get('DEFAULT', 'zdstack_password')
    args = [username, password]
else:
    args = []
if '-a'in opts:
    args.extend([x for x in opts['-a'].split(',') if x])
function_kwarg_str = ', '.join(args)
call_string = opts['-m'] + "(" + function_kwarg_str + ")"
print "Running %s" % (call_string)
response = send_proxy_method(proxy, opts['-m'], *args)
if response:
    handle_response(response)
else:
    print 'No response'

